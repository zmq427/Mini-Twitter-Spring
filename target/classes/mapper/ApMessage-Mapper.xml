<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mq.mapper.dao.ApMessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="com.mq.entity.ApMessage">
        select <include refid="selectFields"></include>
        from ap_message
        where id in (
            select max(id)
            from ap_message
            where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectConversationsCount" resultType="int">
        select count(*)
        from ap_message
        where status != 2 and from_id != 1 and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
    </select>
    <select id="selectLetters" resultType="com.mq.entity.ApMessage">
        select <include refid="selectFields"></include>
        from ap_message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectLetterCount" resultType="int">
        select count(id)
        from ap_message
        where status != 2 and from_id != 1 and conversation_id = #{conversationId}
    </select>
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from ap_message
        where status = 0 and from_id != 1 and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <select id="selectLatestNotice" resultType="com.mq.entity.ApMessage">
        select <include refid="selectFields"></include>
        from ap_message
        where id in (
            select max(id)
            from ap_message
            where status != 2 and from_id = 1 and to_id = #{userId} and conversation_id = #{topic}
        )
    </select>
    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from ap_message
        where status != 2 and from_id = 1 and to_id = #{userId}
            and conversation_id = #{topic}
    </select>
    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from ap_message
        where status = 0 and from_id = 1 and to_id = #{userId} a
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>

    <insert id="insertMessage" parameterType="com.mq.entity.ApMessage">
        insert into ap_message (from_id, to_id, conversation_id, content, status, create_time)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
</mapper>